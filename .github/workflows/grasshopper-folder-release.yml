name: Grasshopper Folder Release

on:
  push:
    paths:
      - 'grasshopper_release/**'
    branches:
      - main

  workflow_dispatch:

permissions:
  contents: write  # required for release creation

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all tags

      - name: Get latest version tag
        id: get_tag
        run: |
          latest_tag=$(git tag --list 'v*' --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          if [ -z "$latest_tag" ]; then
            latest_tag="v0.0.0"
          fi
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Calculate next version and filenames
        id: version
        run: |
          latest="${{ steps.get_tag.outputs.latest_tag }}"
          version=${latest#v}
          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          new_version="v$major.$minor.$patch"
          release_name="DDU Clay 3DPrinting Slicer $new_version"
          zip_name="ddu-clay-3d-printing-slicer-${new_version}.zip"

          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          echo "release_name=$release_name" >> $GITHUB_OUTPUT
          echo "zip_name=$zip_name" >> $GITHUB_OUTPUT

      # - name: Generate release notes from commit messages
      #   id: release_notes
      #   run: |
      #     release_notes=$(git log "${{ steps.get_tag.outputs.latest_tag }}"..HEAD --oneline --no-merges)
      #     if [ -z "$release_notes" ]; then
      #       release_notes="No significant changes."
      #     else
      #       # Format commit messages into a bulleted list
      #       release_notes=$(echo "$release_notes" | sed 's/^/- /')
      #     fi
      #     # Replace newlines with the literal string '\n' for proper multi-line formatting in GitHub Actions
      #     release_notes="${release_notes//$'\n'/'\n'}"
      #     echo "release_notes=$release_notes" >> $GITHUB_OUTPUT

      - name: Prepare and zip the release folder
        run: |
          display_name="DDU Clay3DPrinting Slicer ${{ steps.version.outputs.new_version }}"
          mkdir "$display_name"
          cp -r grasshopper_release/* "$display_name/"
          cp README.md "$display_name/"
          cp LICENSE "$display_name/"
          zip -r "${{ steps.version.outputs.zip_name }}" "$display_name"
          rm -rf "$display_name"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.new_version }}
          name: ${{ steps.version.outputs.release_name }}
          files: ${{ steps.version.outputs.zip_name }}
          body: |
            ### Release Notes
            New Release of the DDU Clay3DPrinting Slicer
        env:
          GITHUB_TOKEN: ${{ secrets.CLAY3DPS_GH_RELEASE }}
